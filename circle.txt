in
in
in
pop [1003]
pop [1002]
pop [1001]

push 0
pop RAX

CYCLE_Y:

push 0
pop RBX

CYCLE_X:

push RAX
push 50
mul
push RBX
add

pop RCX

push RAX
push [1003]
sub
dup
mul

push RBX
push [1002]
sub
dup
mul

add
sqrt
dup

push [1001]
push 0.5
add

ja NOT_IN_CIRCLE

push [1001]
push 0.5
sub

jb NOT_IN_CIRCLE

push 0.001
jmp SET_VALUE

NOT_IN_CIRCLE:

push 0

SET_VALUE:

pop [RCX]


push RBX
push 1
add
pop RBX


push RBX
push 50
jne CYCLE_X


push RAX
push 1
add
pop RAX


push RAX
push 20
jne CYCLE_Y

show

hlt
